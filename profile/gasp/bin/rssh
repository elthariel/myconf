#!/bin/sh
##
## rssh.sh
## Login : <ctaf@localhost.localdomain>
## Started on  Mon May 26 17:16:55 2008 Cedric GESTES
## $Id$
##
## Author(s):
##  - Cedric GESTES <gestes@aldebaran-robotics.com>
##
## Copyright (C) 2008, 2010 Cedric GESTES
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
##

COPY_ID=0
ADDR=""
SSH_USER=""

usage() {
  echo "rssh [-c] <ip|name>"
  echo ""
  echo "  -c : copy the current public keys to the destination authorized_keys"
  exit 1
}

parse_option() {
  while getopts hc opt ; do
    case "$opt" in
      c)
        COPY_ID=1
        ;;
      [?]|h)
        usage
        ;;
    esac
  done
  shift $(($OPTIND-1))
  if ! [ $# -eq 1 ] ; then
    echo "bad number of argument:" $#
    usage
  fi
  ADDR=$1
}

parse_option $@

if echo ${ADDR} | grep '@' >/dev/null 2>/dev/null; then
  SSH_USER=$(echo ${ADDR} | cut -d'@' -f1)
  ADDR=$(echo ${ADDR} | cut -d'@' -f2)
else
  SSH_USER="nao"
fi

# If this look like a number separated by dot, assume it's an IP else
# a bonjour name, and add .local
if echo ${ADDR} | grep -E '^[0-9]+(\.[0-9]+)*$' >/dev/null 2>/dev/null ; then
  if   [ $(echo ${ADDR} | sed -e 's/[^.]//g' | wc -c 2>/dev/null) -eq 1 ] ; then
    ssh_address=10.0.252.${ADDR}
  elif [ $(echo ${ADDR} | sed -e 's/[^.]//g' | wc -c 2>/dev/null) -eq 2 ] ; then
    ssh_address=10.0.${ADDR}
  else
    ssh_address=${ADDR}
  fi
else
  ssh_address=${ADDR}.local
fi

if [ $COPY_ID -eq 1 ] ; then
  ssh-copy-id -i ~/.ssh/id_[rd]sa.pub "${SSH_USER}@$ssh_address"
fi

echo "connecting to '$ssh_address'"
ssh-keygen -R "$ssh_address"
ssh -o StrictHostKeyChecking=no "${SSH_USER}@$ssh_address"

